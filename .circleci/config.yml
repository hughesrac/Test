version: 2.1
jobs:
  build-and-test:
    macos:
      xcode: 14.3.1
    resource_class: macos.m1.medium.gen1
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: test
    steps:
      - checkout
      - run: rm ~/.ssh/id_rsa || true
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

  adhoc:
    macos:
      xcode: 14.3.1
    resource_class: macos.m1.medium.gen1
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: adhoc
    steps:
      - checkout
      - run: rm ~/.ssh/id_rsa || true
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output

  buildanddeploytotestflight:
    macos:
      xcode: 14.3.1
    resource_class: macos.m1.medium.gen1
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: buildanddeploytotestflight
    steps:
      - checkout
      - run: rm ~/.ssh/id_rsa || true
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output
  export-localizations-for-crowdin:
    macos:
      xcode: 14.3.1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - run: rm ~/.ssh/id_rsa || true
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane xliffexport
      - add_ssh_keys
      - run:
          name: "Diff xliff and push if needed"
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "localization_bot@willowtreeapps.com"
            git config user.name "Localization Bot"
            git add -A
            git diff-index --quiet HEAD || git commit -m "Updated app localizations for Crowdin Export [ci skip]"
            git push -q git@github.com:willowtreeapps/vocable-ios.git ${CIRCLE_BRANCH}

  update-localizations-test-deploy:
    macos:
      xcode: 14.3.1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - run: rm ~/.ssh/id_rsa || true
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane xliffimport
      - run:
          name: Fastlane
          command: bundle exec fastlane test
      - add_ssh_keys
      - deploy:
          name: Push back to branch
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "localization_bot@willowtreeapps.com"
            git config user.name "Localization Bot"
            git add -A
            git diff-index --quiet HEAD || git commit -m "Updated localizations [ci skip]"
            git push -q git@github.com:willowtreeapps/vocable-ios.git ${CIRCLE_BRANCH}

workflows:
  build-test-adhoc-testflight:
    jobs:
      - build-and-test:
          filters:
            branches:
              ignore:
                - /crowdin.*/
      - export-localizations-for-crowdin:
          filters:
            branches:
              only: develop
          requires:
            - build-and-test
      - buildanddeploytotestflight:
          filters:
            branches:
              only:
                - /release.*/
          requires:
            # - export-localizations-for-crowdin TODO the repo this attempts to push to is now protected - how do we resolve?
            - build-and-test
  localize-build-test:
    jobs:
      - update-localizations-test-deploy:
          filters:
            branches:
              ignore:
                - feature/chatgpt-recommendations
              only: /crowdin.*/
